Imports System.ComponentModel
Imports System.Drawing.Drawing2D
Imports System.IO

Public Class KIO_Button
    Inherits Control
    Dim WithEvents tmr As New Timer
    Property UnHovered_Font As Font = New Font("Arial", 12, FontStyle.Regular)
    Property Hovered_Font As Font = New Font("Arial", 12, FontStyle.Regular)
    Property Hovered_Color As Color = Color.White
    Property Hovered_Text As String = "KIO_Button"
    Property UnHovered_Text As String = "KIO_Button"
    Sub New()
        Me.Size = New Size(120, 45)
        tmr.Interval = Speed
        tmr.Start()
        Me.DoubleBuffered = True
        Me.BackColor = Color.White
    End Sub
    Property Fill_Color As Color = Color.FromArgb(58, 123, 201)
    Property Fill_Opacity As Integer = 0
    Property Fill_Opacity2 As Integer = 125
    Property Speed As Integer = 10
    Property Toggled As Boolean = False
#Region "Imported Functions"
    Public Sub FillRoundedRectangle(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal b As Brush, ByVal p As Pen)
        Dim mode As Drawing2D.SmoothingMode = g.SmoothingMode
        g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighSpeed
        g.FillPie(b, r.X, r.Y, d, d, 180, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y, d, d, 270, 90)
        g.FillPie(b, r.X, r.Y + r.Height - d, d, d, 90, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y + r.Height - d, d, d, 0, 90)
        g.FillRectangle(b, CInt(r.X + d / 2), r.Y, r.Width - d, CInt(d / 2))
        g.FillRectangle(b, r.X, CInt(r.Y + d / 2), r.Width, CInt(r.Height - d))
        g.FillRectangle(b, CInt(r.X + d / 2), CInt(r.Y + r.Height - d / 2), CInt(r.Width - d), CInt(d / 2))
        g.SmoothingMode = mode
        '  g.DrawLine(p, New Point(r.X + 1, d - 3), New Point(r.Width, d - 3))
        ' g.DrawLine(p, New Point(r.X + 1, r.Height - (d - 5)), New Point(r.Width, r.Height - (d - 5)))
    End Sub
    Public Sub DrawRoundedRectangle(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal p As Pen)

        g.DrawArc(p, r.X, r.Y, d, d, 180, 90)
        g.DrawLine(p, CInt(r.X + d / 2), r.Y, CInt(r.X + r.Width - d / 2), r.Y)
        g.DrawArc(p, r.X + r.Width - d, r.Y, d, d, 270, 90)
        g.DrawLine(p, r.X, CInt(r.Y + d / 2), r.X, CInt(r.Y + r.Height - d / 2))
        g.DrawLine(p, CInt(r.X + r.Width), CInt(r.Y + d / 2), CInt(r.X + r.Width), CInt(r.Y + r.Height - d / 2))
        g.DrawLine(p, CInt(r.X + d / 2), CInt(r.Y + r.Height), CInt(r.X + r.Width - d / 2), CInt(r.Y + r.Height))
        g.DrawArc(p, r.X, r.Y + r.Height - d, d, d, 90, 90)
        g.DrawArc(p, r.X + r.Width - d, r.Y + r.Height - d, d, d, 0, 90)
    End Sub
#End Region

    Private Sub Master_Button_Paint(sender As Object, e As PaintEventArgs) Handles Me.Paint
        e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.HighQuality

        FillRoundedRectangle(e.Graphics, New Rectangle(3, 3, Me.Width - 5, Me.Height - 5), 8, New SolidBrush(Color.FromArgb(Fill_Opacity, Fill_Color)), New Pen(Color.FromArgb(Fill_Opacity, Fill_Color)))
        DrawRoundedRectangle(e.Graphics, New Rectangle(3, 3, Me.Width - 5, Me.Height - 5), 8, New Pen(Fill_Color))
        e.Graphics.DrawString(UnHovered_Text, UnHovered_Font, New SolidBrush(Color.FromArgb(Fill_Opacity2 * 2, Fill_Color)), New Rectangle(3, 3, Me.Width - 5, Me.Height - 5), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
        e.Graphics.DrawString(Hovered_Text, Hovered_Font, New SolidBrush(Color.FromArgb(Fill_Opacity, Hovered_Color)), New Rectangle(3, 3, Me.Width - 5, Me.Height - 5), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})

    End Sub
    Dim tickss As Integer = 0
    Dim mousex, mousey As Integer
    Private Sub Master_Button_MouseMove(sender As Object, e As MouseEventArgs) Handles Me.MouseMove
        mousex = e.X
        mousey = e.Y

        If New Rectangle(4, 4, Me.Width - 6, Me.Height - 6).Contains(e.X, e.Y) Then
            Toggled = True
            tmr.Interval = Speed
        Else
            Toggled = False
        End If
        If Toggled = True Then
            Cursor = Cursors.Hand
        Else
            Cursor = Cursors.Arrow
        End If
    End Sub

    Private Sub tmr_Tick(sender As Object, e As EventArgs) Handles tmr.Tick

        If Toggled = True Then
            If Not Fill_Opacity > 249 Then
                Fill_Opacity += 10
                If Fill_Opacity2 <= 0 Then
                    Fill_Opacity2 -= 10
                End If
                Me.Refresh()
            End If
        Else
            If Not Fill_Opacity < 1 Then
                Fill_Opacity -= 10
                If Fill_Opacity2 >= 260 Then
                    Fill_Opacity2 += 10
                End If
                Me.Refresh()
            End If
        End If
    End Sub

    Private Sub Master_Button_MouseLeave(sender As Object, e As EventArgs) Handles Me.MouseLeave
        Toggled = False
        Me.Refresh()
    End Sub
    Dim clickedd As Boolean = False
    Event Clicked()

    Private Sub Master_Button_MouseDown(sender As Object, e As MouseEventArgs) Handles Me.MouseDown
        If e.Button = MouseButtons.Left Then
            RaiseEvent Clicked()
            Fill_Opacity2 = 125
            Fill_Opacity = 0
            Me.Refresh()
            Me.Refresh()
        End If
    End Sub
End Class
Public Class KIO_Form
    Inherits ContainerControl
    Dim WithEvents CloudTmr As New Timer
#Region "Cloud Resource"
    Private Minihover As Boolean = False
    Private Maxhover As Boolean = False
    Private Exithover As Boolean = False
    Public Property RoundedCorners As Boolean = True
    Public Property Shadow As Boolean = True
    Public Property Animation As Boolean = True
    Public Property NumofClouds As Integer = 1

    'Dark
    Property dSkyColor1 As Color = Color.FromArgb(39, 33, 47)
    Property dSkyColor2 As Color = Color.FromArgb(39, 33, 47)
    'Regular
    Property SkyColor1 As Color = Color.FromArgb(61, 123, 201)
    Property SkyColor2 As Color = Color.FromArgb(61, 123, 251)
    'Speed 
    Public Property CloudUpdate As Integer = 10
    Property DarkTheme As Boolean = False
    'ReTime Debug so it doesn't Flicker for other controls
    Property Retime_Update As Boolean = True
    Public dCloudRes As String = ""
    Public CloudRes As String = ""
#End Region
#Region "Imported Functions"
    'Source From CRice @ StackOverFlow
    Public Function LoadImage(bitmapstr As String) As Image
        Dim bytes As Byte() = Convert.FromBase64String(bitmapstr)

        Dim img As Image
        Using ms As New MemoryStream(bytes)
            img = Image.FromStream(ms)
        End Using

        Return img
    End Function
#Region "Functions"
    Public Sub FixRoundRectClicked(g As Graphics, rect As Rectangle, exwidth As Integer, Border_color As Color)
        'Fix Top
        'Line right
        'g.DrawLine(New Pen(Border_color), New Point(rect.Width - 7, 2), New Point(rect.Width - 7, 7))
        'Line left
        g.DrawLine(New Pen(Color.White), New Point(rect.X + 1, 10), New Point(rect.Width + rect.Width / 2, 10))
        'Long Line
        ' g.DrawLine(New Pen(Border_color), New Point(rect.X + 2, 7), New Point(rect.Width - 2, 7))
        'Fix Bottom
        'Line Bottom Right
        ' g.DrawLine(New Pen(Under_Color), New Point(7, Me.Height - 2), New Point(7, Me.Height - 4))
        'Line Bottom Left
        ' g.DrawLine(New Pen(Under_Color), New Point(Me.Width - 7, Me.Height - 2), New Point(Me.Width - 7, Me.Height - 4))
        'Line right
        ' g.DrawLine(New Pen(Border_color), New Point(rect.Width - 7, rect.Height - 2), New Point(rect.Width - 7, rect.Height - 6))
        'Line left
        ' g.DrawLine(New Pen(Border_color), New Point(7, rect.Height - 2), New Point(7, rect.Height - 6))
        'Long Line
        g.DrawLine(New Pen(Color.White), New Point(Me.Width / 2 - (exwidth / 2) + 1, 20), New Point(rect.Width + rect.Width / 2, 20))
    End Sub
    Public Sub FixRoundRect(g As Graphics, Border_color As Color, r As Rectangle)
        'Fix Top
        'Line right
        g.DrawLine(New Pen(Border_color), New Point(r.Width - 7, 2), New Point(r.Width - 7, 7))
        'Line left
        g.DrawLine(New Pen(Border_color), New Point(7, 2), New Point(7, 7))
        'Long Line
        g.DrawLine(New Pen(Border_color), New Point(2, 7), New Point(r.Width - 2, 7))
        'Fix Bottom
        'Line Bottom Right
        ' g.DrawLine(New Pen(Under_Color), New Point(7, r.Height - 2), New Point(7, r.Height - 4))
        'Line Bottom Left
        'g.DrawLine(New Pen(Under_Color), New Point(r.Width - 7, r.Height - 2), New Point(r.Width - 7, r.Height - 4))
        'Line right
        g.DrawLine(New Pen(Border_color), New Point(r.Width - 7, r.Height - 6), New Point(r.Width - 7, r.Height - 11))
        'Line left
        g.DrawLine(New Pen(Border_color), New Point(7, r.Height - 6), New Point(7, r.Height - 11))
        'Long Line
        g.DrawLine(New Pen(Border_color), New Point(2, r.Height - 11), New Point(r.Width - 2, r.Height - 11))
    End Sub
    Public Sub DrawRoundRect(g As Graphics, p As Pen, x As Single, y As Single, width As Single, height As Single,
      radius As Single)
        Dim gp As New GraphicsPath()

        gp.AddLine(x + radius, y, x + width - (radius * 2), y)
        ' Line
        gp.AddArc(x + width - (radius * 2), y, radius * 2, radius * 2, 270, 90)
        ' Corner
        gp.AddLine(x + width, y + radius, x + width, y + height - (radius * 2))
        ' Line
        gp.AddArc(x + width - (radius * 2), y + height - (radius * 2), radius * 2, radius * 2, 0, 90)
        ' Corner
        gp.AddLine(x + width - (radius * 2), y + height, x + radius, y + height)
        ' Line
        gp.AddArc(x, y + height - (radius * 2), radius * 2, radius * 2, 90, 90)
        ' Corner
        gp.AddLine(x, y + height - (radius * 2), x, y + radius)
        ' Line
        gp.AddArc(x, y, radius * 2, radius * 2, 180, 90)
        ' Corner
        gp.CloseFigure()

        g.DrawPath(p, gp)
        gp.Dispose()
    End Sub
    Public Sub FillRoundedRectangle(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal b As Brush, ByVal p As Pen)
        Dim mode As Drawing2D.SmoothingMode = g.SmoothingMode
        g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighSpeed
        g.FillPie(b, r.X, r.Y, d, d, 180, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y, d, d, 270, 90)
        g.FillPie(b, r.X, r.Y + r.Height - d, d, d, 90, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y + r.Height - d, d, d, 0, 90)
        g.FillRectangle(b, CInt(r.X + d / 2), r.Y, r.Width - d, CInt(d / 2))
        g.FillRectangle(b, r.X, CInt(r.Y + d / 2), r.Width, CInt(r.Height - d))
        g.FillRectangle(b, CInt(r.X + d / 2), CInt(r.Y + r.Height - d / 2), CInt(r.Width - d), CInt(d / 2))
        g.SmoothingMode = mode
        '  g.DrawLine(p, New Point(r.X + 1, d - 3), New Point(r.Width, d - 3))
        ' g.DrawLine(p, New Point(r.X + 1, r.Height - (d - 5)), New Point(r.Width, r.Height - (d - 5)))
    End Sub
    Public Sub FillRoundedRectangle2(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal b As Brush)
        Dim mode As Drawing2D.SmoothingMode = g.SmoothingMode
        g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias
        g.FillPie(b, r.X + 1, r.Y + 1, d, d, 180, 90)
        g.FillPie(b, r.X + r.Width - d - 1, r.Y + 1, d, d, 270, 90)
        g.FillPie(b, r.X + 1, r.Y + r.Height - d - 1, d, d, 90, 90)
        g.FillPie(b, r.X + r.Width - d - 1, r.Y + r.Height - d - 1, d, d, 0, 90)
        g.FillRectangle(b, CInt(r.X + d / 2), r.Y + 1, r.Width - d, CInt(d / 2))
        g.FillRectangle(b, r.X + 1, CInt(r.Y + d / 2), r.Width - 2, CInt(r.Height - d))
        g.FillRectangle(b, CInt(r.X + d / 2), CInt(r.Y + r.Height - d / 2 - 1), CInt(r.Width - d + 1), CInt(d / 2 + 0.5))
        g.SmoothingMode = mode
        '  g.DrawLine(p, New Point(r.X + 1, d - 3), New Point(r.Width, d - 3))
        ' g.DrawLine(p, New Point(r.X + 1, r.Height - (d - 5)), New Point(r.Width, r.Height - (d - 5)))
    End Sub
    Public Sub FillNotTopRoundedRectangle(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal b As Brush)
        Dim mode As Drawing2D.SmoothingMode = g.SmoothingMode
        g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighSpeed
        g.FillPie(b, r.X, r.Y, 1, 1, 180, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y, 1, 1, 270, 90)
        g.FillPie(b, r.X, r.Y + r.Height - d, d, d, 90, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y + r.Height - d, d, d, 0, 90)
        g.FillRectangle(b, CInt(r.X + d / 2), r.Y, r.Width - d, CInt(d / 2))
        g.FillRectangle(b, r.X, CInt(r.Y + d / 2), r.Width, CInt(r.Height - d))
        g.FillRectangle(b, CInt(r.X + d / 2), CInt(r.Y + r.Height - d / 2), CInt(r.Width - d), CInt(d / 2))
        g.SmoothingMode = mode
    End Sub
    Public Sub FillNotBottomRoundedRectangle(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal b As Brush)
        Dim mode As Drawing2D.SmoothingMode = g.SmoothingMode
        g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighSpeed
        g.FillPie(b, r.X, r.Y, d, d, 180, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y, d, d, 270, 90)
        'g.FillPie(b, r.X, r.Y + r.Height - d, d, d, 90, 90)
        '  g.FillPie(b, r.X + r.Width - d, r.Y + r.Height - d, d, d, 0, 90)
        g.FillRectangle(b, CInt(r.X + d / 2), r.Y, r.Width - d, CInt(d / 2))
        g.FillRectangle(b, r.X, CInt(r.Y + d / 2), r.Width, CInt(r.Height - d))
        g.FillRectangle(b, CInt(r.X + d / 2), CInt(r.Y + r.Height - d / 2), CInt(r.Width - d), CInt(d / 2))
        g.SmoothingMode = mode
    End Sub
#End Region
#End Region
    Sub New()
        Me.Dock = DockStyle.Fill
        CloudTmr.Interval = 400
        Me.SetStyle(ControlStyles.SupportsTransparentBackColor, True)
        CloudTmr.Start()
        Me.DoubleBuffered = True
    End Sub

    Private Sub KIO_Form_Paint(sender As Object, e As PaintEventArgs) Handles Me.Paint
        e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.AntiAlias
        If DarkTheme = False Then
            Dim brush = New LinearGradientBrush(New Rectangle(0, 0, Me.Width, 85), SkyColor1, SkyColor2, 90.0!)
            'Rounded or Square Corners
            If RoundedCorners = True Then
                'Clear
                e.Graphics.Clear(BackColor)
                If Shadow = True Then
                    FillRoundedRectangle2(e.Graphics, New Rectangle(5, 89, Me.Width - 8, Me.Height - 89), 12, New SolidBrush(Color.DarkGray))
                    FillRoundedRectangle2(e.Graphics, New Rectangle(-1, 0, Me.Width + 1, 95), 12, brush)
                    FillRoundedRectangle2(e.Graphics, New Rectangle(0, 89, Me.Width, Me.Height - 93), 12, New SolidBrush(Color.White))
                Else
                    FillNotBottomRoundedRectangle(e.Graphics, New Rectangle(0, 0, Me.Width, 85), 12, brush)
                    FillNotTopRoundedRectangle(e.Graphics, New Rectangle(0, 89, Me.Width, Me.Height - 89), 12, New SolidBrush(Color.White))
                End If
            Else
                e.Graphics.Clear(Color.Fuchsia)
                If Shadow = True Then
                    e.Graphics.FillRectangle(New SolidBrush(Color.DarkGray), New Rectangle(5, 89, Me.Width - 8, Me.Height - 80))
                    e.Graphics.FillRectangle(brush, New Rectangle(-1, -1, Me.Width + 1, 81))
                    e.Graphics.FillRectangle(New SolidBrush(Color.White), New Rectangle(-1, 94, Me.Width + 1, Me.Height - 98))
                Else
                    e.Graphics.FillRectangle(brush, New Rectangle(-1, 0, Me.Width, 80))
                    e.Graphics.FillRectangle(New SolidBrush(Color.White), New Rectangle(-1, 89, Me.Width, Me.Height - 80))
                End If
            End If
            Dim img As Bitmap
            img = Nothing
            'Clouds
            If Animation = True Then
                If Not CloudTmr.Enabled = True Then
                    CloudTmr.Start()
                End If
                CloudTmr.Interval = CloudUpdate
                For Each Cloud As CloudItem In Items
                    If Cloud.Toggle = True Then
                        Dim bytes As Byte() = Convert.FromBase64String(Cloud.ImgStr)

                        Using ms As New MemoryStream(bytes)
                            img = Image.FromStream(ms)
                        End Using
                        e.Graphics.DrawImage(img, New Rectangle(Cloud.CloudLoc, Cloud.CloudSize))
                        'Dispose of Img to reduct Memory use
                        img.Dispose()
                        img = Nothing
                    End If
                Next
            Else
                If CloudTmr.Enabled = True Then
                    CloudTmr.Stop()
                End If
            End If
            Dim sz As SizeF = e.Graphics.MeasureString(FindForm.Text, New Font("Arial", 12, FontStyle.Regular))

            Dim byts As Byte() = Convert.FromBase64String(CloudRes)
            Dim im As Bitmap
            Using ms As New MemoryStream(byts)
                im = Image.FromStream(ms)
            End Using
            'Draw First Cloud
            e.Graphics.DrawImage(im, New Rectangle(1, 40, 180, 90))
            'Dispose of Img to reduct Memory use
            im.Dispose()
            'Repeated Cloud Pattern
            NumofClouds = Me.Width / 180
            NumofClouds = Math.Ceiling(NumofClouds)
            NumofClouds = NumofClouds
            For i As Integer = 1 To NumofClouds
                Dim bytes As Byte() = Convert.FromBase64String(CloudRes)
                Using ms As New MemoryStream(bytes)
                    img = Image.FromStream(ms)
                End Using
                e.Graphics.DrawImage(img, New Rectangle(i * 180, 40, 180, 90))
                'Dispose of Img to reduct Memory use
                img.Dispose()
                img = Nothing
            Next

            'Buttons
            'Minimize 
            If Minihover = True Then
                e.Graphics.FillEllipse(New SolidBrush(Color.FromArgb(206, 228, 255)), New Rectangle(Me.Width - 58, 8, 12, 12))
                e.Graphics.DrawString("0", New Font("Webdings", 7.1, FontStyle.Regular), New SolidBrush(Color.FromArgb(58, 123, 201)), New Rectangle(Me.Width - 58, 5, 12, 12))
            Else
                e.Graphics.FillEllipse(New SolidBrush(Color.White), New Rectangle(Me.Width - 58, 8, 12, 12))
                e.Graphics.DrawString("0", New Font("Webdings", 7.1, FontStyle.Regular), New SolidBrush(Color.FromArgb(58, 123, 201)), New Rectangle(Me.Width - 58, 5, 12, 12))
            End If
            'Maxmize
            If Maxhover = True Then
                e.Graphics.FillEllipse(New SolidBrush(Color.FromArgb(206, 228, 255)), New Rectangle(Me.Width - 40, 8, 12, 12)) '47, 48, 52
                e.Graphics.DrawString("+", New Font("Arial", 9.5, FontStyle.Regular), New SolidBrush(Color.FromArgb(58, 123, 201)), New Rectangle(Me.Width - 39.5, 6, 12, 12))
            Else
                e.Graphics.FillEllipse(New SolidBrush(Color.White), New Rectangle(Me.Width - 40, 8, 12, 12)) '47, 48, 52
                e.Graphics.DrawString("+", New Font("Arial", 9.5, FontStyle.Regular), New SolidBrush(Color.FromArgb(58, 123, 201)), New Rectangle(Me.Width - 39.5, 6, 12, 12))
            End If
            If Exithover = True Then
                'Close
                e.Graphics.FillEllipse(New SolidBrush(Color.FromArgb(206, 228, 255)), New Rectangle(Me.Width - 22, 8, 12, 12))
                e.Graphics.DrawString("r", New Font("Webdings", 7.1, FontStyle.Regular), New SolidBrush(Color.FromArgb(58, 123, 201)), New Rectangle(Me.Width - 22, 6, 12, 12))
            Else
                'Close
                e.Graphics.FillEllipse(New SolidBrush(Color.White), New Rectangle(Me.Width - 22, 8, 12, 12))
                e.Graphics.DrawString("r", New Font("Webdings", 7.1, FontStyle.Regular), New SolidBrush(Color.FromArgb(58, 123, 201)), New Rectangle(Me.Width - 22, 6, 12, 12))
            End If

            ' FillRoundedRectangle2(e.Graphics, New Rectangle(Me.Width / 2 - (sz.Width / 2) - 20, 6, sz.Width + 23, 18), 8, Brushes.White)
            '  e.Graphics.DrawLine(Pens.White, New Point(Me.Width / 2 - (sz.Width / 2) + 1, 10), New Point(sz.Width * 2, 10))
            '  e.Graphics.DrawLine(Pens.White, New Point(Me.Width / 2 - (sz.Width / 2) + 1, 20), New Point(sz.Width * 2, 20))
            e.Graphics.DrawString(FindForm.Text, New Font("Arial", 12, FontStyle.Regular), New SolidBrush(Color.White), New Rectangle(Me.Width / 2 - (sz.Width / 2) + 6 - 20, 7, sz.Width + 26, 18), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
            e.Graphics.DrawImage(FindForm.Icon.ToBitmap, New Rectangle(Me.Width / 2 - (sz.Width / 2) + 2 - 20, 7, 16, 16))
        End If
    End Sub
    Private Sub CloudTmr_Tick(sender As Object, e As EventArgs) Handles CloudTmr.Tick
        If Animation = True Then
            For Each Cloud As CloudItem In Items
                If Cloud.Toggle = True Then
                    If Not Cloud.CloudLoc.X < Me.Width Then
                        Cloud.CloudLoc = New Point(Cloud.CloudSize.Width - (Cloud.CloudSize.Width * 2), Cloud.CloudLoc.Y)
                    Else
                        Cloud.CloudLoc = New Point(Cloud.CloudLoc.X + Cloud.CloudSpeed, Cloud.CloudLoc.Y)
                    End If
                End If
            Next
            If Retime_Update = True Then
                Me.Refresh()
            End If
        End If
    End Sub
#Region "ThemeDraggable"
    Dim x, y As Integer
    Private savePoint As New Point(0, 0)
    Private isDragging As Boolean = False

    Protected Overrides Sub OnMouseDown(e As MouseEventArgs)
        Dim dragRect As New Rectangle(0, 0, Me.Width - 61, 50)
        Dim dragRect2 As New Rectangle(0, 21, Me.Width, 50)
        If dragRect.Contains(New Point(e.X, e.Y)) Or dragRect2.Contains(New Point(e.X, e.Y)) Then
            isDragging = True
            savePoint = New Point(e.X, e.Y)
        End If
        Dim clickRect As New Rectangle(Me.Width - 22, 8, 12, 12)
        If clickRect.Contains(New Point(e.X, e.Y)) Then
            Environment.[Exit](0)
        End If
        If New Rectangle(Me.Width - 40, 8, 12, 12).Contains(New Point(mouseX, mouseY)) Then
            If Not FindForm.WindowState = FormWindowState.Maximized Then
                FindForm.WindowState = FormWindowState.Maximized
            Else
                FindForm.WindowState = FormWindowState.Normal
            End If
        End If
        If New Rectangle(Me.Width - 58, 8, 12, 12).Contains(New Point(mouseX, mouseY)) Then
            FindForm.WindowState = FormWindowState.Minimized
        End If
        '
        MyBase.OnMouseDown(e)
    End Sub

    Protected Overrides Sub OnMouseUp(e As MouseEventArgs)
        isDragging = False
        MyBase.OnMouseUp(e)
    End Sub

    Private mouseX As Integer
    Private mouseY As Integer
    Protected Overrides Sub OnMouseMove(e As MouseEventArgs)

        mouseX = e.X
        mouseY = e.Y
        If isDragging Then
            Dim screenPoint As Point = PointToScreen(e.Location)

            FindForm().Location = New Point(screenPoint.X - Me.savePoint.X, screenPoint.Y - Me.savePoint.Y)
        End If
        If New Rectangle(Me.Width - 40, 8, 12, 12).Contains(New Point(mouseX, mouseY)) Then
            Maxhover = True
        Else
            Maxhover = False
        End If
        If New Rectangle(Me.Width - 58, 8, 12, 12).Contains(New Point(mouseX, mouseY)) Then
            Minihover = True
        Else
            Minihover = False
        End If
        If New Rectangle(Me.Width - 22, 8, 12, 12).Contains(e.X, e.Y) Then
            Exithover = True
        Else
            Exithover = False
        End If
        MyBase.OnMouseMove(e)
        Invalidate()
    End Sub


#End Region
#Region "Clouds Class"
    Public Class ItemCollection
        Inherits List(Of CloudItem)
        Private Parent As KIO_Form
        Public Sub New(Parent As KIO_Form)
            Me.Parent = Parent
        End Sub
        Public Shadows Sub Add(Item As CloudItem)
            MyBase.Add(Item)
        End Sub
        Public Shadows Sub AddRange(Range As List(Of CloudItem))
            MyBase.AddRange(Range)
        End Sub
        Public Shadows Sub Clear()
            MyBase.Clear()
        End Sub
        Public Shadows Sub Remove(Item As CloudItem)
            MyBase.Remove(Item)
        End Sub
        Public Shadows Sub RemoveAt(Index As Integer)
            MyBase.RemoveAt(Index)
        End Sub
        Public Shadows Sub RemoveAll(Predicate As System.Predicate(Of CloudItem))
            MyBase.RemoveAll(Predicate)
        End Sub
        Public Shadows Sub RemoveRange(Index As Integer, Count As Integer)
            MyBase.RemoveRange(Index, Count)
        End Sub

    End Class
    Public Class CloudItem
        Property Text As String
        Property ImgStr As String = ""
        Property CloudSpeed As Integer = 1
        Property CloudLoc As Point = New Point(20, 20)
        Property CloudSize As Size = New Size(44, 24)
        Property Toggle As Boolean = True
        Protected UniqueId As Guid
        Sub New()
            UniqueId = Guid.NewGuid()
        End Sub
        Public Overrides Function ToString() As String
            Return Text
        End Function

        Public Overrides Function Equals(obj As Object) As Boolean
            If TypeOf obj Is CloudItem Then
                Return (DirectCast(obj, CloudItem).UniqueId = UniqueId)
            End If
            Return False
        End Function

    End Class
    Public _Items As New ItemCollection(Me)
    <DesignerSerializationVisibility(DesignerSerializationVisibility.Content)>
    Public Property Items As ItemCollection
        Get
            Return _Items
        End Get
        Set(ByVal value As ItemCollection)
            _Items = value
        End Set
    End Property
#End Region
End Class
Public Class KIO_SquareButton
    Inherits Control
    Dim WithEvents tmr As New Timer
    Property Outer_Color As Color = Color.FromArgb(206, 228, 255) '197, 240, 238 <- Different Looking Blues
    Property Fill_Color As Color = Color.FromArgb(58, 123, 201) '99, 216, 212 <- Different Looking Blues
    Property Text_Color As Color = Color.White
    Property Hover_Text_Color As Color = Color.FromArgb(58, 123, 201)
    Property Icon As Image
    Property Fill_Opacity As Integer = 0
    Property Fill_Opacity2 As Integer = 125
    Property ShowIcon As Boolean = True
    Property Icon_width As Integer = 30
    Property Toggled As Boolean = False
    Property Text_Font As Font = New Font("Arial", 12, FontStyle.Bold)
    Event Clicked()
    Sub New()
        tmr.Interval = 10
        tmr.Start()
        Me.BackColor = Color.White
        Me.Size = New Size(120, 45)
        Me.DoubleBuffered = True
    End Sub

    Private Sub KIO_SquareButton_Paint(sender As Object, e As PaintEventArgs) Handles Me.Paint
        e.Graphics.SmoothingMode = SmoothingMode.HighQuality
        e.Graphics.Clear(BackColor)
        e.Graphics.FillRectangle(New SolidBrush(Outer_Color), New Rectangle(0, 0, Me.Width, Me.Height))
        e.Graphics.FillRectangle(New SolidBrush(Color.FromArgb(Fill_Opacity2 * 2, Fill_Color)), New Rectangle(5, 5, Me.Width - 10, Me.Height - 10))
        If ShowIcon = True Then
            Try
                e.Graphics.DrawString(Me.Text, Text_Font, New SolidBrush(Color.FromArgb(Fill_Opacity2 * 2, Text_Color)), New Rectangle(5, 5, (Me.Width + Icon_width) - 10, Me.Height - 10), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
                e.Graphics.DrawString(Me.Text, Text_Font, New SolidBrush(Color.FromArgb(Fill_Opacity, Hover_Text_Color)), New Rectangle(5, 5, (Me.Width + Icon_width) - 10, Me.Height - 10), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
                e.Graphics.DrawImage(Icon, New Rectangle(8, 8, Icon_width, Me.Height - 16))
            Catch : End Try
        Else
            e.Graphics.DrawString(Me.Text, Text_Font, New SolidBrush(Color.FromArgb(Fill_Opacity2 * 2, Text_Color)), New Rectangle(5, 5, Me.Width - 10, Me.Height - 10), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
            e.Graphics.DrawString(Me.Text, Text_Font, New SolidBrush(Color.FromArgb(Fill_Opacity, Hover_Text_Color)), New Rectangle(5, 5, Me.Width - 10, Me.Height - 10), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
        End If
    End Sub

    Private Sub tmr_Tick(sender As Object, e As EventArgs) Handles tmr.Tick
        If Toggled = True Then
            If Not Fill_Opacity > 249 Then
                Fill_Opacity += 10
                If Fill_Opacity2 >= 10 Then
                    Fill_Opacity2 -= 10
                End If
                Me.Refresh()
            End If
        Else
            If Not Fill_Opacity < 1 Then
                Fill_Opacity -= 10
                If Fill_Opacity2 <= 120 Then
                    Fill_Opacity2 += 10
                End If
                Me.Refresh()
            End If
        End If
    End Sub

    Private Sub KIO_SquareButton_MouseMove(sender As Object, e As MouseEventArgs) Handles Me.MouseMove
        If New Rectangle(5, 5, Me.Width - 10, Me.Height - 10).Contains(e.X, e.Y) Then
            Toggled = True
            Cursor = Cursors.Hand
        Else
            Toggled = False
            Cursor = Cursors.Arrow
        End If
    End Sub

    Private Sub KIO_SquareButton_MouseLeave(sender As Object, e As EventArgs) Handles Me.MouseLeave
        Toggled = False
        Cursor = Cursors.Arrow
    End Sub

    Private Sub KIO_SquareButton_MouseDown(sender As Object, e As MouseEventArgs) Handles Me.MouseDown
        If e.Button = MouseButtons.Left Then
            RaiseEvent Clicked()
            Fill_Opacity2 = 125
            Fill_Opacity = 0
            Me.Refresh()
        End If
    End Sub
End Class
Public Class KIO_Note
    Inherits Control
    Property Border_Color As Color = Color.FromArgb(206, 228, 255) '197, 240, 238 <- Different Looking Blues
    Property Fill_Color As Color = Color.FromArgb(58, 123, 201) '99, 216, 212 <- Different Looking Blues
    Property Whole_color As Color = Color.White
    Property Text_Color As Color = Color.White
    Property Text_Font As Font = New Font("Arial", 12, FontStyle.Bold)
    Property Image As Image
    Property Fold As Integer = 20
    Sub New()
        Me.Size = New Size(125, 105)
        Me.DoubleBuffered = True
        Me.BackColor = Color.White
    End Sub

    Public Shared Function OvalImage(img As Image) As Image
        Dim bmp As New Bitmap(img.Width, img.Height)
        Using gp As New GraphicsPath()
            gp.AddEllipse(0, 0, img.Width, img.Height)
            Using gr As Graphics = Graphics.FromImage(bmp)
                gr.SetClip(gp)
                gr.DrawImage(img, Point.Empty)
            End Using
        End Using
        Return bmp
    End Function
    Private Sub Kio_Note_Paint(sender As Object, e As PaintEventArgs) Handles Me.Paint
        e.Graphics.SmoothingMode = SmoothingMode.HighQuality
        e.Graphics.Clear(BackColor)
        Dim npoints As PointF() = {New Point(Fold, 1), New Point(Me.Width - 3, 1), New Point(Me.Width - 3, Me.Height - 3), New Point(1, Me.Height - 3), New Point(1, Fold), New Point(Fold, 1)}
        e.Graphics.FillPolygon(New SolidBrush(Fill_Color), npoints)
        e.Graphics.FillEllipse(New SolidBrush(Border_Color), New Rectangle(Me.Width / 2 - 30, 10, 60, 60))
        e.Graphics.FillEllipse(New SolidBrush(Whole_color), New Rectangle(Me.Width / 2 - 28, 12, 56, 56))
        Try
            e.Graphics.DrawImage(OvalImage(Image), New Rectangle(Me.Width / 2 - 28, 12, 56, 56))
        Catch : End Try
        e.Graphics.DrawString(Me.Text, Text_Font, New SolidBrush(Text_Color), New Rectangle(2, Me.Height - 22, Me.Width - 4, 20), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
    End Sub
End Class
Public Class KIO_Checkbox
    Inherits Control
    Dim WithEvents tmr As New Timer
    Sub New()
        tmr.Interval = 1
        Me.Size = New Size(187, 24)
        Me.DoubleBuffered = True
    End Sub
    Dim r_color As Integer = 255
    Dim g_color As Integer = 1
    Dim b_color As Integer = 255
    <Category("Color")>
    Property Border_color As Color = Color.FromArgb(190, 203, 205)
    <Category("Color")>
    Property Check_color As Color = Color.FromArgb(58, 123, 201)
    <Category("Color")>
    Property Text_color As Color = Color.FromArgb(106, 121, 123)
    <Category("Color")>
    Property csBorder_color As Color = Color.FromArgb(58, 123, 201)
    <Category("Color")>
    Property crBorder_color As Color = Color.FromArgb(206, 228, 255)
    <Category("Color")>
    Property Back_color As Color = Color.FromArgb(255, 255, 255)
    <Category("Color")>
    Property Ball_color As Color = Color.FromArgb(248, 37, 71)
    <Category("Color")>
    Property BorderBall_color As Color = Color.FromArgb(248, 89, 115)
    Property Fonnt As Font = New Font("Arial", 11, FontStyle.Regular)
    Property Orb As Boolean = False
    Property Animation As Boolean = False
#Region "Functions"
    Public Sub FixRoundRectClicked(g As Graphics, rect As Rectangle)
        'Fix Top
        'Line right
        g.DrawLine(New Pen(Border_color), New Point(rect.Width - 7, 2), New Point(rect.Width - 7, 7))
        'Line left
        g.DrawLine(New Pen(Border_color), New Point(7, 2), New Point(7, 7))
        'Long Line
        g.DrawLine(New Pen(Border_color), New Point(2, 7), New Point(rect.Width - 2, 7))
        'Fix Bottom
        'Line Bottom Right
        ' g.DrawLine(New Pen(Under_Color), New Point(7, Me.Height - 2), New Point(7, Me.Height - 4))
        'Line Bottom Left
        ' g.DrawLine(New Pen(Under_Color), New Point(Me.Width - 7, Me.Height - 2), New Point(Me.Width - 7, Me.Height - 4))
        'Line right
        g.DrawLine(New Pen(Border_color), New Point(rect.Width - 7, rect.Height - 2), New Point(rect.Width - 7, rect.Height - 6))
        'Line left
        g.DrawLine(New Pen(Border_color), New Point(7, rect.Height - 2), New Point(7, rect.Height - 6))
        'Long Line
        g.DrawLine(New Pen(Border_color), New Point(2, rect.Height - 7), New Point(rect.Width - 2, rect.Height - 7))
    End Sub
    Public Sub FixRoundRect(g As Graphics)
        'Fix Top
        'Line right
        g.DrawLine(New Pen(Border_color), New Point(Me.Width - 7, 2), New Point(Me.Width - 7, 7))
        'Line left
        g.DrawLine(New Pen(Border_color), New Point(7, 2), New Point(7, 7))
        'Long Line
        g.DrawLine(New Pen(Border_color), New Point(2, 7), New Point(Me.Width - 2, 7))
        'Fix Bottom
        'Line Bottom Right
        ' g.DrawLine(New Pen(Under_Color), New Point(7, Me.Height - 2), New Point(7, Me.Height - 4))
        'Line Bottom Left
        'g.DrawLine(New Pen(Under_Color), New Point(Me.Width - 7, Me.Height - 2), New Point(Me.Width - 7, Me.Height - 4))
        'Line right
        g.DrawLine(New Pen(Border_color), New Point(Me.Width - 7, Me.Height - 6), New Point(Me.Width - 7, Me.Height - 11))
        'Line left
        g.DrawLine(New Pen(Border_color), New Point(7, Me.Height - 6), New Point(7, Me.Height - 11))
        'Long Line
        g.DrawLine(New Pen(Border_color), New Point(2, Me.Height - 11), New Point(Me.Width - 2, Me.Height - 11))
    End Sub
    Public Sub DrawRoundRect(g As Graphics, p As Pen, x As Single, y As Single, width As Single, height As Single,
      radius As Single)
        Dim gp As New GraphicsPath()

        gp.AddLine(x + radius, y, x + width - (radius * 2), y)
        ' Line
        gp.AddArc(x + width - (radius * 2), y, radius * 2, radius * 2, 270, 90)
        ' Corner
        gp.AddLine(x + width, y + radius, x + width, y + height - (radius * 2))
        ' Line
        gp.AddArc(x + width - (radius * 2), y + height - (radius * 2), radius * 2, radius * 2, 0, 90)
        ' Corner
        gp.AddLine(x + width - (radius * 2), y + height, x + radius, y + height)
        ' Line
        gp.AddArc(x, y + height - (radius * 2), radius * 2, radius * 2, 90, 90)
        ' Corner
        gp.AddLine(x, y + height - (radius * 2), x, y + radius)
        ' Line
        gp.AddArc(x, y, radius * 2, radius * 2, 180, 90)
        ' Corner
        gp.CloseFigure()

        g.DrawPath(p, gp)
        gp.Dispose()
    End Sub
    Public Sub FillRoundedRectangle(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal b As Brush)
        Dim mode As Drawing2D.SmoothingMode = g.SmoothingMode
        g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias
        g.FillPie(b, r.X, r.Y, d, d, 180, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y, d, d, 270, 90)
        g.FillPie(b, r.X, r.Y + r.Height - d, d, d, 90, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y + r.Height - d, d, d, 0, 90)
        g.FillRectangle(b, CInt(r.X + d / 2), r.Y, r.Width - d, CInt(d / 2))
        g.FillRectangle(b, r.X, CInt(r.Y + d / 2), r.Width, CInt(r.Height - d))
        g.FillRectangle(b, CInt(r.X + d / 2), CInt(r.Y + r.Height - d / 2), CInt(r.Width - d), CInt(d / 2))
        g.SmoothingMode = mode
    End Sub
    Public Sub FillNotTopRoundedRectangle(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal b As Brush)
        Dim mode As Drawing2D.SmoothingMode = g.SmoothingMode
        g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighSpeed
        g.FillPie(b, r.X, r.Y, 1, 1, 180, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y, 1, 1, 270, 90)
        g.FillPie(b, r.X, r.Y + r.Height - d, d, d, 90, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y + r.Height - d, d, d, 0, 90)
        ' g.FillRectangle(b, CInt(r.X + d / 2), r.Y, r.Width - d, CInt(d / 2))
        g.FillRectangle(b, r.X, CInt(r.Y + d / 2), r.Width, CInt(r.Height - d))
        g.FillRectangle(b, CInt(r.X + d / 2), CInt(r.Y + r.Height - d / 2), CInt(r.Width - d), CInt(d / 2))
        g.SmoothingMode = mode
    End Sub
    Public Sub FillNotBottomRoundedRectangle(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal b As Brush)
        Dim mode As Drawing2D.SmoothingMode = g.SmoothingMode
        g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias
        g.FillPie(b, r.X, r.Y, d, d, 180, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y, d, d, 270, 90)
        'g.FillPie(b, r.X, r.Y + r.Height - d, d, d, 90, 90)
        '  g.FillPie(b, r.X + r.Width - d, r.Y + r.Height - d, d, d, 0, 90)
        g.FillRectangle(b, CInt(r.X + d / 2), r.Y, r.Width - d, CInt(d / 2))
        ' g.FillRectangle(b, r.X, CInt(r.Y + d / 2), r.Width, CInt(r.Height - d))
        '   g.FillRectangle(b, CInt(r.X + d / 2), CInt(r.Y + r.Height - d / 2), CInt(r.Width - d), CInt(d / 2))
        g.SmoothingMode = mode
    End Sub
#End Region
    Property Checked As Boolean = False
    Event CheckedChanged()
    Private Sub PlisticBlue_Checkbox_Paint(sender As Object, e As PaintEventArgs) Handles Me.Paint
        e.Graphics.Clear(BackColor)
        e.Graphics.SmoothingMode = SmoothingMode.AntiAlias
        If Orb = True Then
            If Animation = True Then
                If Not tmr.Enabled = True Then
                    tmr.Start()
                End If
                e.Graphics.FillEllipse(New SolidBrush(Color.FromArgb(100, r_color, g_color, b_color)), New Rectangle(24, 7, 8, 8))
                e.Graphics.FillEllipse(New SolidBrush(Color.FromArgb(r_color, g_color, b_color)), New Rectangle(25, 8, 6, 6))
            Else
                If Not tmr.Enabled = False Then
                    tmr.Stop()
                End If
                e.Graphics.FillEllipse(New SolidBrush(BorderBall_color), New Rectangle(24, 7, 8, 8))
                e.Graphics.FillEllipse(New SolidBrush(Ball_color), New Rectangle(25, 8, 6, 6))
            End If

            If Checked = False Then
                DrawRoundRect(e.Graphics, New Pen(Border_color), 1, 1, 20, 20, 2)
                e.Graphics.DrawRectangle(New Pen(Border_color), New Rectangle(2, 2, 18, 18))
            Else
                DrawRoundRect(e.Graphics, New Pen(crBorder_color), 1, 1, 20, 20, 2)
                e.Graphics.DrawRectangle(New Pen(csBorder_color), New Rectangle(2, 2, 18, 18))

                '  FixRoundRectClicked(e.Graphics, New Rectangle(0, 0, 21, 22))
                e.Graphics.DrawString("a", New Font("Webdings", 16, FontStyle.Regular), New SolidBrush(Check_color), New Rectangle(2, 0, 20, 20), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
            End If
            e.Graphics.DrawString(Text, Fonnt, New SolidBrush(Text_color), New Rectangle(34, 1, Me.Width - 23, Me.Height - 2), New StringFormat With {.Alignment = StringAlignment.Near, .LineAlignment = StringAlignment.Center})
        Else
            If Checked = False Then
                DrawRoundRect(e.Graphics, New Pen(Border_color), 1, 1, 20, 20, 2)
                e.Graphics.DrawRectangle(New Pen(Border_color), New Rectangle(2, 2, 18, 18))
            Else
                DrawRoundRect(e.Graphics, New Pen(crBorder_color), 1, 1, 20, 20, 2)
                e.Graphics.DrawRectangle(New Pen(csBorder_color), New Rectangle(2, 2, 18, 18))

                '  FixRoundRectClicked(e.Graphics, New Rectangle(0, 0, 21, 22))
                e.Graphics.DrawString("a", New Font("Webdings", 16, FontStyle.Regular), New SolidBrush(Check_color), New Rectangle(2, 0, 20, 20), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
            End If
            e.Graphics.DrawString(Text, Fonnt, New SolidBrush(Text_color), New Rectangle(24, 1, Me.Width - 23, Me.Height - 2), New StringFormat With {.Alignment = StringAlignment.Near, .LineAlignment = StringAlignment.Center})
        End If
    End Sub
#Region "Mouse"
    Private Sub PlisticBlue_Checkbox_MouseDown(sender As Object, e As MouseEventArgs) Handles Me.MouseDown
        If e.Button = MouseButtons.Left Then
            If New Rectangle(1, 1, 20, 20).Contains(e.X, e.Y) Then
                Checked = Not Checked
                RaiseEvent CheckedChanged()
                Me.Refresh()
            End If
        End If
    End Sub

    Private Sub PlisticBlue_Checkbox_MouseMove(sender As Object, e As MouseEventArgs) Handles Me.MouseMove
        If New Rectangle(1, 1, 20, 20).Contains(e.X, e.Y) Then
            Cursor = Cursors.Hand
        Else
            Cursor = Cursors.Arrow
        End If
    End Sub

    Private Sub tmr_Tick(sender As Object, e As EventArgs) Handles tmr.Tick
        Dim rand As New Random
        If r_color = 255 Then
            r_color = rand.Next(1, 245)
        Else
            r_color += 1
        End If
        If g_color = 255 Then
            g_color = rand.Next(1, 245)
        Else
            g_color += 1
        End If
        If b_color = 255 Then
            b_color = rand.Next(1, 245)
        Else
            b_color += 1
        End If
        Me.Refresh()
    End Sub
#End Region
End Class
Public Class KIO_HeaderLbl
    Inherits Control
    Property Icon As Boolean = False
    Property Sub_Text As Boolean = False
    Property Image As Image
    Property Fill_Color As Color = Color.FromArgb(66, 137, 223)
    Property Fold_Color As Color = Color.FromArgb(58, 123, 201)
    Property RoundedCorner As Boolean = False
    Property Image_Size As Size = New Size(40, 40)
    Property Sub_String As String = "This is a string."
    Property Text_Font As Font = New Font("Arial", 12, FontStyle.Bold)
    Property Text_Color As Color = Color.White
    Property Sub_Text_Font As Font = New Font("Arial", 10, FontStyle.Regular)
    Sub New()
        Me.BackColor = Color.White
        Me.Size = New Size(120, 45)
        Me.DoubleBuffered = True
    End Sub
#Region "Imported Functions"
    Public Sub FillRoundedRectangle(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal b As Brush, ByVal p As Pen)
        Dim mode As Drawing2D.SmoothingMode = g.SmoothingMode
        g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighSpeed
        g.FillPie(b, r.X, r.Y, d, d, 180, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y, d, d, 270, 90)
        g.FillPie(b, r.X, r.Y + r.Height - d, d, d, 90, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y + r.Height - d, d, d, 0, 90)
        g.FillRectangle(b, CInt(r.X + d / 2), r.Y, r.Width - d, CInt(d / 2))
        g.FillRectangle(b, r.X, CInt(r.Y + d / 2), r.Width, CInt(r.Height - d))
        g.FillRectangle(b, CInt(r.X + d / 2), CInt(r.Y + r.Height - d / 2), CInt(r.Width - d), CInt(d / 2))
        g.SmoothingMode = mode
        '  g.DrawLine(p, New Point(r.X + 1, d - 3), New Point(r.Width, d - 3))
        ' g.DrawLine(p, New Point(r.X + 1, r.Height - (d - 5)), New Point(r.Width, r.Height - (d - 5)))
    End Sub
#End Region
    Private Sub KIO_HeaderLbl_Paint(sender As Object, e As PaintEventArgs) Handles Me.Paint
        If RoundedCorner = False Then
            e.Graphics.FillRectangle(New SolidBrush(Fold_Color), New Rectangle(0, 0, Me.Width, Me.Height))
            e.Graphics.FillRectangle(New SolidBrush(Fill_Color), New Rectangle(0, 0, Me.Width, Me.Height - 4))
        Else
            FillRoundedRectangle(e.Graphics, New Rectangle(0, 0, Me.Width, Me.Height), 4, New SolidBrush(Fold_Color), New Pen(Fold_Color))
            FillRoundedRectangle(e.Graphics, New Rectangle(0, 0, Me.Width, Me.Height - 4), 4, New SolidBrush(Fill_Color), New Pen(Fill_Color))
        End If
        If Icon = True Then
            Try
                e.Graphics.DrawImage(Image, New Rectangle(5, 5, Image_Size.Width, Image_Size.Height))
            Catch : End Try
            If Sub_Text = True Then
                e.Graphics.DrawString(Me.Text, Text_Font, New SolidBrush(Text_Color), New Rectangle(Image_Size.Width + 3, 5, Me.Width - 3, Me.Height - 20), New StringFormat With {.Alignment = StringAlignment.Near, .LineAlignment = StringAlignment.Center})
                e.Graphics.DrawString(Sub_String, Sub_Text_Font, New SolidBrush(Text_Color), New Rectangle(Image_Size.Width + 6, Me.Height - 38, Me.Width - 3, Me.Height - 10), New StringFormat With {.Alignment = StringAlignment.Near, .LineAlignment = StringAlignment.Center})
            Else
                e.Graphics.DrawString(Me.Text, Text_Font, New SolidBrush(Text_Color), New Rectangle(Image_Size.Width + 3, 5, Me.Width - Image_Size.Width + 3, Me.Height - 10), New StringFormat With {.Alignment = StringAlignment.Near, .LineAlignment = StringAlignment.Center})
            End If
        Else
            If Sub_Text = True Then
                e.Graphics.DrawString(Me.Text, Text_Font, New SolidBrush(Text_Color), New Rectangle(5, 5, Me.Width - 3, Me.Height - 20), New StringFormat With {.Alignment = StringAlignment.Near, .LineAlignment = StringAlignment.Center})
                e.Graphics.DrawString(Sub_String, Sub_Text_Font, New SolidBrush(Text_Color), New Rectangle(8, Me.Height - 38, Me.Width - 3, Me.Height - 20), New StringFormat With {.Alignment = StringAlignment.Near, .LineAlignment = StringAlignment.Center})
            Else
                e.Graphics.DrawString(Me.Text, Text_Font, New SolidBrush(Text_Color), New Rectangle(5, 5, Me.Width - 3, Me.Height - 10), New StringFormat With {.Alignment = StringAlignment.Near, .LineAlignment = StringAlignment.Center})
            End If
        End If
    End Sub
End Class

Public Class KIO_Rating
    Inherits Control
    Property Selected As Integer = 0
    Dim mouseover As Boolean = False
    Dim mouseoveri As Integer = 0
    Sub New()
        Me.BackColor = Color.White
        Dim itm As New StarItem
        Me.DoubleBuffered = True
    End Sub

    Public Sub KIO_Rating_Paint(sender As Object, e As PaintEventArgs) Handles Me.Paint

        If mouseover = False Then
            Dim img As Bitmap
            img = Nothing
            For i As Integer = 0 To Items.Count
                If i = Selected Then
                    Dim si As Integer = 0
                    For Each itm As StarItem In Items
                        If si + 1 = i Then
                            e.Graphics.DrawString(itm.Text, itm.Text_Font, New SolidBrush(itm.Text_Color), New Rectangle(0, 0, Me.Width, 16), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
                        End If
                        si += 1
                    Next
                End If
                If i < Selected Then
                    Dim i2 As Integer = 0
                    For Each itm As StarItem In Items

                        If i2 = i Then
                            Dim bytes As Byte() = Convert.FromBase64String(itm.SelectedStr)
                            Using ms As New MemoryStream(bytes)
                                img = Image.FromStream(ms)
                            End Using
                            e.Graphics.DrawImage(img, New Rectangle(i2 * 18, Me.Height - 18, 16, 16))
                            img.Dispose()
                            img = Nothing
                        End If
                        i2 += 1
                    Next
                Else
                    Dim i2 As Integer = 0
                    For Each itm As StarItem In Items
                        If i2 = i Then
                            Dim bytes As Byte() = Convert.FromBase64String(itm.UnselectedStr)
                            Using ms As New MemoryStream(bytes)
                                img = Image.FromStream(ms)
                            End Using
                            e.Graphics.DrawImage(img, New Rectangle(i2 * 18, Me.Height - 18, 16, 16))
                            img.Dispose()
                            img = Nothing
                        End If
                        i2 += 1
                    Next

                End If
            Next
        Else
            Dim img As Bitmap
            img = Nothing
            For i As Integer = 0 To Items.Count
                If i = mouseoveri Then
                    Dim si As Integer = 0
                    For Each itm As StarItem In Items
                        If si + 1 = i Then
                            e.Graphics.DrawString(itm.Text, itm.Text_Font, New SolidBrush(itm.Text_Color), New Rectangle(0, 0, Me.Width, 16), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
                        End If
                        si += 1
                    Next
                End If
                If i < mouseoveri Then
                    Dim i2 As Integer = 0
                    For Each itm As StarItem In Items
                        If i2 = i Then
                            Dim bytes As Byte() = Convert.FromBase64String(itm.SelectedStr)


                            Using ms As New MemoryStream(bytes)
                                img = Image.FromStream(ms)
                            End Using
                            e.Graphics.DrawImage(img, New Rectangle(i2 * 18, Me.Height - 18, 16, 16))
                            img.Dispose()
                            img = Nothing
                        End If
                        i2 += 1
                    Next
                Else
                    Dim i2 As Integer = 0
                    For Each itm As StarItem In Items
                        If i2 = i Then
                            Dim bytes As Byte() = Convert.FromBase64String(itm.UnselectedStr)
                            Using ms As New MemoryStream(bytes)
                                img = Image.FromStream(ms)
                            End Using
                            e.Graphics.DrawImage(img, New Rectangle(i2 * 18, Me.Height - 18, 16, 16))
                            img.Dispose()
                            img = Nothing
                        End If
                        i2 += 1
                    Next

                End If
            Next
        End If


    End Sub

    Private Sub KIO_Rating_MouseMove(sender As Object, e As MouseEventArgs) Handles Me.MouseMove
        If New Rectangle(0, Me.Height - 18, Me.Width, 16).Contains(e.X, e.Y) Then
            mouseover = True
            mouseoveri = Math.Ceiling(e.X / 18)
            Me.Refresh()
        Else
            mouseover = False
            Me.Refresh()
        End If
    End Sub
    Event Clicked(i As Integer)
    Private Sub KIO_Rating_MouseDown(sender As Object, e As MouseEventArgs) Handles Me.MouseDown
        If e.Button = MouseButtons.Left Then
            If mouseover = True Then
                Dim si As Integer = 0
                For Each itm As StarItem In Items
                    If New Rectangle(si * 18, Me.Height - 18, 16, 16).Contains(e.X, e.Y) Then
                        Selected = mouseoveri
                        RaiseEvent Clicked(mouseoveri)
                        mouseover = False
                        Me.Refresh()
                    End If
                    si += 1
                Next
            End If
        End If
    End Sub
#Region "Stars Class"
    Public Class ItemCollection
        Inherits List(Of StarItem)
        Private Parent As KIO_Rating
        Public Sub New(Parent As KIO_Rating)
            Me.Parent = Parent
        End Sub
        Public Shadows Sub Add(Item As StarItem)
            MyBase.Add(Item)
        End Sub
        Public Shadows Sub AddRange(Range As List(Of StarItem))
            MyBase.AddRange(Range)
        End Sub
        Public Shadows Sub Clear()
            MyBase.Clear()
        End Sub
        Public Shadows Sub Remove(Item As StarItem)
            MyBase.Remove(Item)
        End Sub
        Public Shadows Sub RemoveAt(Index As Integer)
            MyBase.RemoveAt(Index)
        End Sub
        Public Shadows Sub RemoveAll(Predicate As System.Predicate(Of StarItem))
            MyBase.RemoveAll(Predicate)
        End Sub
        Public Shadows Sub RemoveRange(Index As Integer, Count As Integer)
            MyBase.RemoveRange(Index, Count)
        End Sub

    End Class
    Public Class StarItem
        Property Text As String
        Property SelectedStr As String = ""
        Property UnselectedStr As String = ""
        Protected UniqueId As Guid
        Property Text_Color As Color = Color.Black
        Property Text_Font As Font = New Font("Arial", 12, FontStyle.Regular)
        Sub New()
            UniqueId = Guid.NewGuid()
        End Sub
        Public Overrides Function ToString() As String
            Return Text
        End Function

        Public Function ToUNS() As String
            Return UnselectedStr
        End Function
        Public Function ToS() As String
            Return SelectedStr
        End Function
        Public Overrides Function Equals(obj As Object) As Boolean
            If TypeOf obj Is StarItem Then
                Return (DirectCast(obj, StarItem).UniqueId = UniqueId)
            End If
            Return False
        End Function

    End Class
    Public _Items As New ItemCollection(Me)
    <DesignerSerializationVisibility(DesignerSerializationVisibility.Content)>
    Public Property Items As ItemCollection
        Get
            Return _Items
        End Get
        Set(ByVal value As ItemCollection)
            _Items = value
        End Set
    End Property
#End Region
End Class
Public Class KIO_Step_Button
    Inherits Control
    Enum Selecte
        None
        S1
        S2
        S3
    End Enum
    Property Selected As Selecte = Selecte.None
    Property Color1 As Color = Color.FromArgb(200, 62, 41)
    Property Color2 As Color = Color.FromArgb(202, 109, 42)
    Property Color3 As Color = Color.FromArgb(115, 140, 68)
    Property Color_Selected As Color = Color.White
    Property Step_Font As Font = New Font("Arial", 12, FontStyle.Regular)
    Sub New()
        Me.DoubleBuffered = True
        Me.BackColor = Color.White
    End Sub
#Region "Imported Functions"
    Public Sub FillRoundedRectangle(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal b As Brush)
        Dim mode As Drawing2D.SmoothingMode = g.SmoothingMode
        g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighSpeed
        g.FillPie(b, r.X, r.Y, d, d, 180, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y, d, d, 270, 90)
        g.FillPie(b, r.X, r.Y + r.Height - d, d, d, 90, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y + r.Height - d, d, d, 0, 90)
        g.FillRectangle(b, CInt(r.X + d / 2), r.Y, r.Width - d, CInt(d / 2))
        g.FillRectangle(b, r.X, CInt(r.Y + d / 2), r.Width, CInt(r.Height - d))
        g.FillRectangle(b, CInt(r.X + d / 2), CInt(r.Y + r.Height - d / 2), CInt(r.Width - d), CInt(d / 2))
        g.SmoothingMode = mode
        '  g.DrawLine(p, New Point(r.X + 1, d - 3), New Point(r.Width, d - 3))
        ' g.DrawLine(p, New Point(r.X + 1, r.Height - (d - 5)), New Point(r.Width, r.Height - (d - 5)))
    End Sub
    Public Sub DrawRoundedRectangle(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal p As Pen)

        g.DrawArc(p, r.X, r.Y, d, d, 180, 90)
        g.DrawLine(p, CInt(r.X + d / 2), r.Y, CInt(r.X + r.Width - d / 2), r.Y)
        g.DrawArc(p, r.X + r.Width - d, r.Y, d, d, 270, 90)
        g.DrawLine(p, r.X, CInt(r.Y + d / 2), r.X, CInt(r.Y + r.Height - d / 2))
        g.DrawLine(p, CInt(r.X + r.Width), CInt(r.Y + d / 2), CInt(r.X + r.Width), CInt(r.Y + r.Height - d / 2))
        g.DrawLine(p, CInt(r.X + d / 2), CInt(r.Y + r.Height), CInt(r.X + r.Width - d / 2), CInt(r.Y + r.Height))
        g.DrawArc(p, r.X, r.Y + r.Height - d, d, d, 90, 90)
        g.DrawArc(p, r.X + r.Width - d, r.Y + r.Height - d, d, d, 0, 90)
    End Sub
#End Region
    Private Sub KIO_Step_Button_Paint(sender As Object, e As PaintEventArgs) Handles Me.Paint
        e.Graphics.SmoothingMode = SmoothingMode.HighQuality
        If Selected = Selecte.None Then
            DrawRoundedRectangle(e.Graphics, New Rectangle(0, 0, Me.Width / 2, Me.Height - 1), 18, New Pen(Color1))
            e.Graphics.DrawString("1", Step_Font, New SolidBrush(Color1), New Rectangle(0, 0, Me.Width / 3 + 5, Me.Height), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
            DrawRoundedRectangle(e.Graphics, New Rectangle(Me.Width / 2 - 2, 0, Me.Width / 2, Me.Height - 1), 18, New Pen(Color3))
            e.Graphics.DrawString("3", Step_Font, New SolidBrush(Color3), New Rectangle(Me.Width - Me.Width / 3, 0, Me.Width / 3, Me.Height), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
            e.Graphics.FillRectangle(New SolidBrush(Color.White), New Rectangle(Me.Width / 2 - ((Me.Width / 3) / 2), 0, Me.Width / 3, Me.Height))
            e.Graphics.DrawRectangle(New Pen(Color2), New Rectangle(Me.Width / 2 - ((Me.Width / 3) / 2), 0, Me.Width / 3, Me.Height - 1))
            e.Graphics.DrawString("2", Step_Font, New SolidBrush(Color2), New Rectangle(Me.Width / 2 - ((Me.Width / 3) / 2), 0, Me.Width / 3, Me.Height), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
        ElseIf Selected = Selecte.S1 Then
            DrawRoundedRectangle(e.Graphics, New Rectangle(0, 0, Me.Width / 2, Me.Height - 1), 18, New Pen(Color1))
            FillRoundedRectangle(e.Graphics, New Rectangle(0, 0, Me.Width / 2, Me.Height - 1), 18, New SolidBrush(Color1))
            e.Graphics.DrawString("1", Step_Font, New SolidBrush(Color_Selected), New Rectangle(0, 0, Me.Width / 3 + 5, Me.Height), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
            DrawRoundedRectangle(e.Graphics, New Rectangle(Me.Width / 2 - 2, 0, Me.Width / 2, Me.Height - 1), 18, New Pen(Color3))
            e.Graphics.DrawString("3", Step_Font, New SolidBrush(Color3), New Rectangle(Me.Width - Me.Width / 3, 0, Me.Width / 3, Me.Height), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
            e.Graphics.FillRectangle(New SolidBrush(Color.White), New Rectangle(Me.Width / 2 - ((Me.Width / 3) / 2), 0, Me.Width / 3, Me.Height))
            e.Graphics.DrawRectangle(New Pen(Color2), New Rectangle(Me.Width / 2 - ((Me.Width / 3) / 2), 0, Me.Width / 3, Me.Height - 1))
            e.Graphics.DrawString("2", Step_Font, New SolidBrush(Color2), New Rectangle(Me.Width / 2 - ((Me.Width / 3) / 2), 0, Me.Width / 3, Me.Height), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
        ElseIf Selected = Selecte.S2 Then
            DrawRoundedRectangle(e.Graphics, New Rectangle(0, 0, Me.Width / 2, Me.Height - 1), 18, New Pen(Color1))
            FillRoundedRectangle(e.Graphics, New Rectangle(0, 0, Me.Width / 2, Me.Height - 1), 18, New SolidBrush(Color1))
            e.Graphics.DrawString("1", Step_Font, New SolidBrush(Color_Selected), New Rectangle(0, 0, Me.Width / 3 + 5, Me.Height), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
            DrawRoundedRectangle(e.Graphics, New Rectangle(Me.Width / 2 - 2, 0, Me.Width / 2, Me.Height - 1), 18, New Pen(Color3))
            e.Graphics.DrawString("3", Step_Font, New SolidBrush(Color3), New Rectangle(Me.Width - Me.Width / 3, 0, Me.Width / 3, Me.Height), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})

            e.Graphics.FillRectangle(New SolidBrush(Color2), New Rectangle(Me.Width / 2 - ((Me.Width / 3) / 2), -1, Me.Width / 3, Me.Height + 1))
            e.Graphics.DrawString("2", Step_Font, New SolidBrush(Color_Selected), New Rectangle(Me.Width / 2 - ((Me.Width / 3) / 2), 0, Me.Width / 3, Me.Height), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
        ElseIf Selected = Selecte.S3 Then
            DrawRoundedRectangle(e.Graphics, New Rectangle(0, 0, Me.Width / 2, Me.Height - 1), 18, New Pen(Color1))
            DrawRoundedRectangle(e.Graphics, New Rectangle(Me.Width / 2 - 2, 0, Me.Width / 2, Me.Height - 1), 18, New Pen(Color3))
            FillRoundedRectangle(e.Graphics, New Rectangle(Me.Width - Me.Width / 3 - 40, 0, Me.Width / 3 + 39, Me.Height), 18, New SolidBrush(Color3))
            FillRoundedRectangle(e.Graphics, New Rectangle(0, 0, Me.Width / 2, Me.Height - 1), 18, New SolidBrush(Color1))
            e.Graphics.DrawString("1", Step_Font, New SolidBrush(Color_Selected), New Rectangle(0, 0, Me.Width / 3 + 5, Me.Height), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
            e.Graphics.DrawString("3", Step_Font, New SolidBrush(Color_Selected), New Rectangle(Me.Width - Me.Width / 3, 0, Me.Width / 3, Me.Height), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})

            e.Graphics.FillRectangle(New SolidBrush(Color2), New Rectangle(Me.Width / 2 - ((Me.Width / 3) / 2), -1, Me.Width / 3, Me.Height + 1))
            e.Graphics.DrawString("2", Step_Font, New SolidBrush(Color_Selected), New Rectangle(Me.Width / 2 - ((Me.Width / 3) / 2), 0, Me.Width / 3, Me.Height), New StringFormat With {.Alignment = StringAlignment.Center, .LineAlignment = StringAlignment.Center})
        End If
    End Sub

    Private Sub KIO_Step_Button_MouseClick(sender As Object, e As MouseEventArgs) Handles Me.MouseClick
        If e.Button = MouseButtons.Left Then
            If New Rectangle(0, 0, Me.Width / 3, Me.Height - 1).Contains(e.X, e.Y) Then
                Selected = Selecte.S1
                Me.Refresh()
            End If
            If New Rectangle(Me.Width / 2 - ((Me.Width / 3) / 2), -1, Me.Width / 3, Me.Height + 1).Contains(e.X, e.Y) Then
                Selected = Selecte.S2
                Me.Refresh()
            End If
            If New Rectangle(Me.Width - Me.Width / 3, 0, Me.Width / 3, Me.Height).Contains(e.X, e.Y) Then
                Selected = Selecte.S3
                Me.Refresh()
            End If
        End If
    End Sub

    Private Sub KIO_Step_Button_MouseMove(sender As Object, e As MouseEventArgs) Handles Me.MouseMove
        If New Rectangle(0, 0, Me.Width - 1, Me.Height - 1).Contains(e.X, e.Y) Then
            Cursor = Cursors.Hand
        Else
            Cursor = Cursors.Arrow
        End If
    End Sub

    Private Sub KIO_Step_Button_MouseLeave(sender As Object, e As EventArgs) Handles Me.MouseLeave
        Cursor = Cursors.Arrow
    End Sub
End Class
Public Class KIO_Star
    Inherits Control
    Dim WithEvents tmr As New Timer
    Property speed As Integer = 80
    Private Function RotateImage(bmp As Bitmap, angle As Single) As Bitmap
        Dim rotatedImage As New Bitmap(bmp.Width, bmp.Height)
        Using g As Graphics = Graphics.FromImage(rotatedImage)
            g.TranslateTransform(bmp.Width / 2, bmp.Height / 2)
            'set the rotation point as the center into the matrix
            g.RotateTransform(angle)
            'rotate
            g.TranslateTransform(-bmp.Width / 2, -bmp.Height / 2)
            'restore rotation point into the matrix
            'draw the image on the new bitmap
            g.DrawImage(bmp, New Point(0, 0))
        End Using

        Return rotatedImage
    End Function
    Sub New()
        tmr.Start()
        tmr.Interval = speed
        Me.DoubleBuffered = True
    End Sub
    Dim toggled As Boolean = False
    Dim img As String = "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABV0lEQVQ4y2Nw0hJloATjk2R00hItgmJGcgwoc9IS/Q/FZaQaIOCkJfoJyYBPUDGiDcgHaazycwBjqCH5+AxQcNISzXXSEp3vpCW62UlL9BVI08GaUjCGGvAKKjcfqlYBZoCGk5bodyTngnFDkMv//0uWgDGIjS4P1aMBMkDdSUv0H0hwR1ne/2P1lf/fz5zx///06f//19T8/9/V9f//ggX/3/f1/D9WkPl/R3I0zACQHnWYF9pgJl9ub4LYnJ+PgS/HRyG7oA05DEDx3A6TvN3ZiqH5dlIcsuZ2WNpAD9XJIAXr0+MwDFgf5AnTPBlfNG4AKTqSkwrW9CYjDYxB7CORwTADNuAz4ClI0ZWc9P/ltnpwJ1fbGyB74Qk+A/6iRdUzJy3R52hif/EZcA+q6KeTlmink5Yoj5OWqCDU3z+hcvfwGaDipCUa4qQlKoYl2YpB5VSQxQG24TQwaqB2jQAAAABJRU5ErkJggg=="
    Dim angl As Integer = 100
    Private Sub Kio_Star_MouseDown(sender As Object, e As MouseEventArgs) Handles Me.MouseDown
        tmr.Interval = speed
        'If e.Button = MouseButtons.Left Then
        '    angl += 1
        '    RotateImage(img, angl)
        '    Me.Refresh()
        'End If
        'If e.Button = MouseButtons.Right Then
        '    img.RotateFlip(RotateFlipType.Rotate270FlipX)
        '    Me.Refresh()
        'End If
    End Sub

    Private Sub Kio_Star_Paint(sender As Object, e As PaintEventArgs) Handles Me.Paint
        Dim im As Bitmap
        Dim sz As SizeF = e.Graphics.MeasureString(FindForm.Text, New Font("Arial", 12, FontStyle.Regular))

        Dim byts As Byte() = Convert.FromBase64String(img)

        Using ms As New MemoryStream(byts)
            im = Image.FromStream(ms)
        End Using
        e.Graphics.DrawImage(RotateImage(im, angl), New Rectangle(0, 0, 16, 16))
    End Sub

    Private Sub tmr_Tick(sender As Object, e As EventArgs) Handles tmr.Tick
        If angl < 355 Then
            angl += 2
            Me.Refresh()
        Else
            angl = 1
            Me.Refresh()
        End If
    End Sub
End Class
Public Class KIO_Textbox
    Inherits Control
    Protected Overrides Sub OnCreateControl()
        MyBase.OnCreateControl()
        If Not Controls.Contains(TB) Then
            Controls.Add(TB)
        End If
    End Sub
    Sub New()
        Me.DoubleBuffered = True
        Me.Width = 150
        Me.Height = 40
        'TB
        MyBase.Font = Text_Font
        TB = New System.Windows.Forms.TextBox
        TB.BackColor = Text_Back_Color
        TB.Font = New Font("Segoe UI", 9)
        TB.Text = Text
        TB.BackColor = Textbox_Back_Color
        TB.ForeColor = Text_Color
        TB.MaxLength = MaxLeng
        TB.Multiline = False
        TB.ReadOnly = ReadOnlyy
        TB.UseSystemPasswordChar = UseChar
        TB.BorderStyle = BorderStyle.None
        If Icon = True Then
            TB.Location = New Point(40, Me.Height / 2 - TB.Height / 2)
            TB.Size = New Size(Me.Width - 44, TB.Height)
        Else
            TB.Location = New Point(10, Me.Height / 2 - TB.Height / 2)
            TB.Size = New Size(Me.Width - 14, TB.Height)
        End If
        TB.Font = MyBase.Font
    End Sub
#Region "Properties"
    Public WithEvents TB As New TextBox
    Property Icon As Boolean = False
    Property Image As Image
    Private Text_Color As Color = Color.FromArgb(28, 28, 28)
    Private Text_Font As Font = New Font("Arial", 11, FontStyle.Regular)
    Private back_Color As Color = Color.White
    Private Text_Back_Color As Color = Color.White
    Private UseChar As Boolean = False
    Property Border_Color As Color = Color.Gray
    Property Selected_Border_Color As Color = Color.FromArgb(61, 123, 201)
    Property Lock As Boolean = False
    Private Textbox_Back_Color As Color = Color.White
    Private MaxLeng As Integer = 255
    Private ReadOnlyy As Boolean = False
    Private TextAlignn As HorizontalAlignment = HorizontalAlignment.Left
    Private Multilinee As Boolean
    Public Sub SelectAll()
        TB.Focus()
        TB.SelectAll()
        Invalidate()
    End Sub

    <Category("Textbox")>
    Public Property BaseColour As Color
        Get
            Return Textbox_Back_Color
        End Get
        Set(value As Color)
            Textbox_Back_Color = value
        End Set
    End Property

    <Category("Textbox")>
    Public Property TextColour As Color
        Get
            Return Text_Color
        End Get
        Set(value As Color)
            Text_Color = value
        End Set
    End Property



    <Category("Textbox")>
    Property TextAlign() As HorizontalAlignment
        Get
            Return TextAlignn
        End Get
        Set(ByVal value As HorizontalAlignment)
            TextAlignn = value
            If TB IsNot Nothing Then
                TB.TextAlign = value
            End If
        End Set
    End Property

    <Category("Textbox")>
    Property MaxLength() As Integer
        Get
            Return MaxLeng
        End Get
        Set(ByVal value As Integer)
            MaxLeng = value
            If TB IsNot Nothing Then
                TB.MaxLength = value
            End If
        End Set
    End Property

    <Category("Textbox")>
    Property [ReadOnly]() As Boolean
        Get
            Return ReadOnlyy
        End Get
        Set(ByVal value As Boolean)
            ReadOnlyy = value
            If TB IsNot Nothing Then
                TB.ReadOnly = value
            End If
        End Set
    End Property

    <Category("Textbox")>
    Property UseSystemPasswordChar() As Boolean
        Get
            Return UseChar
        End Get
        Set(ByVal value As Boolean)
            UseChar = value
            If TB IsNot Nothing Then
                TB.UseSystemPasswordChar = value
            End If
        End Set
    End Property
    <Category("Textbox")>
    Property Textt As String
        Get
            Return Text
        End Get
        Set(ByVal value As String)
            Text = value
            If TB IsNot Nothing Then
                TB.Text = value
            End If
        End Set
    End Property

#End Region
#Region "Functions"
    Public Sub FixRoundRectClicked(g As Graphics)
        'Fix Top
        'Line right
        g.DrawLine(New Pen(Textbox_Back_Color), New Point(Me.Width - 7, 2), New Point(Me.Width - 7, 7))
        'Line left
        g.DrawLine(New Pen(Textbox_Back_Color), New Point(7, 2), New Point(7, 7))
        'Long Line
        g.DrawLine(New Pen(Textbox_Back_Color), New Point(2, 7), New Point(Me.Width - 2, 7))
        'Fix Bottom
        'Line Bottom Right
        ' g.DrawLine(New Pen(Under_Color), New Point(7, Me.Height - 2), New Point(7, Me.Height - 4))
        'Line Bottom Left
        ' g.DrawLine(New Pen(Under_Color), New Point(Me.Width - 7, Me.Height - 2), New Point(Me.Width - 7, Me.Height - 4))
        'Line right
        g.DrawLine(New Pen(Textbox_Back_Color), New Point(Me.Width - 7, Me.Height - 2), New Point(Me.Width - 7, Me.Height - 6))
        'Line left
        g.DrawLine(New Pen(Textbox_Back_Color), New Point(7, Me.Height - 2), New Point(7, Me.Height - 6))
        'Long Line
        g.DrawLine(New Pen(Textbox_Back_Color), New Point(2, Me.Height - 7), New Point(Me.Width - 2, Me.Height - 7))
    End Sub
    Public Sub FixRoundRect(g As Graphics)
        'Fix Top
        'Line right
        g.DrawLine(New Pen(Textbox_Back_Color), New Point(Me.Width - 7, 2), New Point(Me.Width - 7, 7))
        'Line left
        g.DrawLine(New Pen(Textbox_Back_Color), New Point(7, 2), New Point(7, 7))
        'Long Line
        g.DrawLine(New Pen(Textbox_Back_Color), New Point(2, 7), New Point(Me.Width - 2, 7))
        'Fix Bottom
        'Line Bottom Right
        ' g.DrawLine(New Pen(Under_Color), New Point(7, Me.Height - 2), New Point(7, Me.Height - 4))
        'Line Bottom Left
        'g.DrawLine(New Pen(Under_Color), New Point(Me.Width - 7, Me.Height - 2), New Point(Me.Width - 7, Me.Height - 4))
        'Line right
        g.DrawLine(New Pen(Textbox_Back_Color), New Point(Me.Width - 7, Me.Height - 6), New Point(Me.Width - 7, Me.Height - 11))
        'Line left
        g.DrawLine(New Pen(Textbox_Back_Color), New Point(7, Me.Height - 6), New Point(7, Me.Height - 11))
        'Long Line
        g.DrawLine(New Pen(Textbox_Back_Color), New Point(2, Me.Height - 11), New Point(Me.Width - 2, Me.Height - 11))
    End Sub
    Public Sub DrawRoundRect(g As Graphics, p As Pen, x As Single, y As Single, width As Single, height As Single,
      radius As Single)
        Dim gp As New GraphicsPath()

        gp.AddLine(x + radius, y, x + width - (radius * 2), y)
        ' Line
        gp.AddArc(x + width - (radius * 2), y, radius * 2, radius * 2, 270, 90)
        ' Corner
        gp.AddLine(x + width, y + radius, x + width, y + height - (radius * 2))
        ' Line
        gp.AddArc(x + width - (radius * 2), y + height - (radius * 2), radius * 2, radius * 2, 0, 90)
        ' Corner
        gp.AddLine(x + width - (radius * 2), y + height, x + radius, y + height)
        ' Line
        gp.AddArc(x, y + height - (radius * 2), radius * 2, radius * 2, 90, 90)
        ' Corner
        gp.AddLine(x, y + height - (radius * 2), x, y + radius)
        ' Line
        gp.AddArc(x, y, radius * 2, radius * 2, 180, 90)
        ' Corner
        gp.CloseFigure()

        g.DrawPath(p, gp)
        gp.Dispose()
    End Sub
    Public Sub FillRoundedRectangle(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal b As Brush)
        Dim mode As Drawing2D.SmoothingMode = g.SmoothingMode
        g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias
        g.FillPie(b, r.X, r.Y, d, d, 180, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y, d, d, 270, 90)
        g.FillPie(b, r.X, r.Y + r.Height - d, d, d, 90, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y + r.Height - d, d, d, 0, 90)
        g.FillRectangle(b, CInt(r.X + d / 2), r.Y, r.Width - d, CInt(d / 2))
        g.FillRectangle(b, r.X, CInt(r.Y + d / 2), r.Width, CInt(r.Height - d))
        g.FillRectangle(b, CInt(r.X + d / 2), CInt(r.Y + r.Height - d / 2), CInt(r.Width - d), CInt(d / 2))
        g.SmoothingMode = mode
    End Sub
    Public Sub FillNotTopRoundedRectangle(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal b As Brush)
        Dim mode As Drawing2D.SmoothingMode = g.SmoothingMode
        g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighSpeed
        g.FillPie(b, r.X, r.Y, 1, 1, 180, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y, 1, 1, 270, 90)
        g.FillPie(b, r.X, r.Y + r.Height - d, d, d, 90, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y + r.Height - d, d, d, 0, 90)
        ' g.FillRectangle(b, CInt(r.X + d / 2), r.Y, r.Width - d, CInt(d / 2))
        g.FillRectangle(b, r.X, CInt(r.Y + d / 2), r.Width, CInt(r.Height - d))
        g.FillRectangle(b, CInt(r.X + d / 2), CInt(r.Y + r.Height - d / 2), CInt(r.Width - d), CInt(d / 2))
        g.SmoothingMode = mode
    End Sub
    Public Sub FillNotBottomRoundedRectangle(ByVal g As Drawing.Graphics, ByVal r As Rectangle, ByVal d As Integer, ByVal b As Brush)
        Dim mode As Drawing2D.SmoothingMode = g.SmoothingMode
        g.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias
        g.FillPie(b, r.X, r.Y, d, d, 180, 90)
        g.FillPie(b, r.X + r.Width - d, r.Y, d, d, 270, 90)
        'g.FillPie(b, r.X, r.Y + r.Height - d, d, d, 90, 90)
        '  g.FillPie(b, r.X + r.Width - d, r.Y + r.Height - d, d, d, 0, 90)
        g.FillRectangle(b, CInt(r.X + d / 2), r.Y, r.Width - d, CInt(d / 2))
        ' g.FillRectangle(b, r.X, CInt(r.Y + d / 2), r.Width, CInt(r.Height - d))
        '   g.FillRectangle(b, CInt(r.X + d / 2), CInt(r.Y + r.Height - d / 2), CInt(r.Width - d), CInt(d / 2))
        g.SmoothingMode = mode
    End Sub
#End Region

    Private Sub PlisticBlue_Textbox_Paint(sender As Object, e As PaintEventArgs) Handles Me.Paint
        e.Graphics.SmoothingMode = SmoothingMode.HighQuality
        e.Graphics.Clear(back_Color)
        FillRoundedRectangle(e.Graphics, New Rectangle(1, 1, Me.Width - 2, Me.Height - 2), 8, New SolidBrush(Textbox_Back_Color))
        If TB.Focused = True Then
            DrawRoundRect(e.Graphics, New Pen(Selected_Border_Color), 1, 1, Me.Width - 2, Me.Height - 2, 8)
        Else
            DrawRoundRect(e.Graphics, New Pen(Border_Color), 1, 1, Me.Width - 2, Me.Height - 2, 8)
        End If
        FixRoundRectClicked(e.Graphics)
        TB.BackColor = Textbox_Back_Color
        TB.ForeColor = Text_Color
        If Icon = True Then
            e.Graphics.DrawImage(Image, New Rectangle(6, 6, 32, 32))
        End If
        If Lock = True Then
            TB.ReadOnly = True
            ReadOnlyy = True
            TB.Refresh()
            '  FixRoundRectClicked(e.Graphics)
        Else
            TB.ReadOnly = False
            ReadOnlyy = False
            TB.Refresh()
        End If
    End Sub

    Private Sub PlisticBlue_Textbox_Resize(sender As Object, e As EventArgs) Handles Me.Resize
        If Icon = True Then
            TB.Location = New Point(40, Me.Height / 2 - TB.Height / 2)
            TB.Size = New Size(Me.Width - 44, TB.Height)
        Else
            TB.Location = New Point(10, Me.Height / 2 - TB.Height / 2)
            TB.Size = New Size(Me.Width - 14, TB.Height)
        End If
    End Sub
    Event TextChangedd(text As String)
    Private Sub TB_TextChanged(sender As Object, e As EventArgs) Handles TB.TextChanged
        Text = TB.Text
        Textt = TB.Text
        RaiseEvent TextChangedd(Text)
    End Sub

    Private Sub TB_LostFocus(sender As Object, e As EventArgs) Handles TB.LostFocus
        Me.Refresh()
    End Sub

    Private Sub TB_GotFocus(sender As Object, e As EventArgs) Handles TB.GotFocus
        Me.Refresh()
    End Sub
End Class